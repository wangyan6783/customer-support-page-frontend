{"version":3,"sources":["components/Directory.js","components/MainHeader.js","components/CategoryItem.js","components/CategoryList.js","components/FAQHeader.js","components/QuestionItem.js","components/QuestionList.js","components/FAQ.js","pages/CustomerSupportPage.js","App.js","serviceWorker.js","index.js"],"names":["Directory","directoryContent","className","href","mainDirectory","subDirectory","MainHeader","mainHeaderContent","subTitle","title","content","library","add","faShoppingCart","faTruck","faFileAlt","faUser","faTag","faCheckCircle","faQuestionCircle","faPlus","faMinus","CategoryItem","category","name","description","icon","CategoryList","categoriesData","map","key","id","FAQHeader","faqHeaderContent","title1","title2","link","QuestionItem","questionInfo","question","answer","useState","showAnswer","setShowAnswer","onClick","QuestionList","questionsData","FAQ","CustomerSupportPage","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uyGAaeA,MAXf,YAA0C,IAArBC,EAAoB,EAApBA,iBACnB,OACE,yBAAKC,UAAU,aACb,uBAAGC,KAAK,mCAAmCD,UAAU,kBAClDD,EAAiBG,eAEpB,uBAAGF,UAAU,mBAAb,aAAsCD,EAAiBI,iBCI9CC,MAVf,YAA4C,IAAtBC,EAAqB,EAArBA,kBACpB,OACE,4BAAQL,UAAU,eAChB,uBAAGA,UAAU,yBAAyBK,EAAkBC,UACxD,wBAAIN,UAAU,eAAeK,EAAkBE,OAC/C,uBAAGP,UAAU,wBAAwBK,EAAkBG,W,qBCQ7DC,IAAQC,IACNC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,KAiBaC,MAdf,YAAkE,IAAD,IAAzCC,SAAYC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,KACrD,OACE,wBAAIxB,UAAU,iBACZ,yBAAKA,UAAU,8BACb,kBAAC,IAAD,CAAiBwB,KAAMA,EAAMxB,UAAU,wBAEzC,6BACE,wBAAIA,UAAU,uBAAuBsB,GACrC,2BAAIC,MCpBGE,MAZf,YAA2C,IAAnBC,EAAkB,EAAlBA,eACtB,OACE,iCACE,wBAAI1B,UAAU,iBACX0B,EAAeC,KAAI,SAAAN,GAAQ,OAC1B,kBAAC,EAAD,CAAcA,SAAUA,EAAUO,IAAKP,EAASQ,WCS3CC,MAff,YAA0C,IAArBC,EAAoB,EAApBA,iBACnB,OACE,4BAAQ/B,UAAU,cAChB,yBAAKA,UAAU,wBACb,uBAAGA,UAAU,yBAAyB+B,EAAiBzB,UACvD,4BAAKyB,EAAiBC,QACtB,4BAAKD,EAAiBE,SAExB,uBAAGhC,KAAK,mCAAmCD,UAAU,kBAClD+B,EAAiBG,Q,QCaXC,MArBf,YAA+D,IAAD,IAAtCC,aAAgBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,OAAY,EACxBC,oBAAS,GADe,mBACrDC,EADqD,KACzCC,EADyC,KAO5D,OACE,wBAAIzC,UAAU,oBAAoB0C,QALpC,WACED,GAAeD,KAKb,kBAAC,IAAD,CACExC,UAAU,oBACVwB,KAAMgB,EAAa,QAAU,SAE/B,6BACE,wBAAIxC,UAAU,sBAAsBqC,GACpC,uBAAGrC,UAAU,uBAAuBwC,GAAcF,MCL3CK,MAVf,YAA0C,IAAlBC,EAAiB,EAAjBA,cACtB,OACE,wBAAI5C,UAAU,qBACX4C,EAAcjB,KAAI,SAAAU,GAAQ,OACzB,kBAAC,EAAD,CAAcT,IAAKS,EAASR,GAAIO,aAAcC,S,cCQvCQ,MATf,WACE,OACE,6BAAS7C,UAAU,OACjB,kBAAC,EAAD,CAAW+B,iBAAkBA,IAC7B,kBAAC,EAAD,CAAca,cAAeA,M,wBCUpBE,MAXf,WACE,OACE,6BACE,kBAAC,EAAD,CAAW/C,iBAAkBA,IAC7B,kBAAC,EAAD,CAAYM,kBAAmBA,IAC/B,kBAAC,EAAD,CAAcqB,eAAgBA,IAC9B,kBAAC,EAAD,QCHSqB,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCKcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.70a9038e.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Directory({ directoryContent }) {\n  return (\n    <div className=\"directory\">\n      <a href=\"/customer-support-page-frontend/\" className=\"main-link-text\">\n        {directoryContent.mainDirectory}\n      </a>\n      <p className=\"sub-text inline\">{` / ${directoryContent.subDirectory}`}</p>\n    </div>\n  );\n}\n\nexport default Directory;\n","import React from \"react\";\n\nfunction MainHeader({ mainHeaderContent }) {\n  return (\n    <header className=\"main-header\">\n      <p className=\"uppercase padding-b-3\">{mainHeaderContent.subTitle}</p>\n      <h1 className=\"padding-b-3\">{mainHeaderContent.title}</h1>\n      <p className=\"sub-text padding-b-3\">{mainHeaderContent.content}</p>\n    </header>\n  );\n}\n\nexport default MainHeader;\n","import React from \"react\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faShoppingCart,\n  faTruck,\n  faFileAlt,\n  faUser,\n  faTag,\n  faCheckCircle,\n  faQuestionCircle,\n  faPlus,\n  faMinus\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(\n  faShoppingCart,\n  faTruck,\n  faFileAlt,\n  faUser,\n  faTag,\n  faCheckCircle,\n  faQuestionCircle,\n  faPlus,\n  faMinus\n);\n\nfunction CategoryItem({ category: { name, description, icon } }) {\n  return (\n    <li className=\"category-item\">\n      <div className=\"category-item-icon-wrapper\">\n        <FontAwesomeIcon icon={icon} className=\"category-item-icon\" />\n      </div>\n      <div>\n        <h4 className=\"category-item-title\">{name}</h4>\n        <p>{description}</p>\n      </div>\n    </li>\n  );\n}\n\nexport default CategoryItem;\n","import React from \"react\";\nimport CategoryItem from \"./CategoryItem\";\n\nfunction CategoryList({ categoriesData }) {\n  return (\n    <section>\n      <ul className=\"category-list\">\n        {categoriesData.map(category => (\n          <CategoryItem category={category} key={category.id} />\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nexport default CategoryList;\n","import React from \"react\";\n\nfunction FAQHeader({ faqHeaderContent }) {\n  return (\n    <header className=\"faq-header\">\n      <div className=\"faq-header-section-1\">\n        <p className=\"uppercase padding-b-2\">{faqHeaderContent.subTitle}</p>\n        <h1>{faqHeaderContent.title1}</h1>\n        <h1>{faqHeaderContent.title2}</h1>\n      </div>\n      <a href=\"/customer-support-page-frontend/\" className=\"main-link-text\">\n        {faqHeaderContent.link}\n      </a>\n    </header>\n  );\n}\n\nexport default FAQHeader;\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction QuestionItem({ questionInfo: { question, answer } }) {\n  const [showAnswer, setShowAnswer] = useState(false);\n\n  function handleShowAnswer() {\n    setShowAnswer(!showAnswer);\n  }\n\n  return (\n    <li className=\"faq-question-item\" onClick={handleShowAnswer}>\n      <FontAwesomeIcon\n        className=\"faq-question-icon\"\n        icon={showAnswer ? \"minus\" : \"plus\"}\n      />\n      <div>\n        <h4 className=\"faq-question-title\">{question}</h4>\n        <p className=\"faq-question-answer\">{showAnswer && answer}</p>\n      </div>\n    </li>\n  );\n}\n\nexport default QuestionItem;\n","import React from \"react\";\nimport QuestionItem from \"./QuestionItem\";\n\nfunction QuestionList({ questionsData }) {\n  return (\n    <ul className=\"faq-question-list\">\n      {questionsData.map(question => (\n        <QuestionItem key={question.id} questionInfo={question} />\n      ))}\n    </ul>\n  );\n}\n\nexport default QuestionList;\n","import React from \"react\";\nimport FAQHeader from \"./FAQHeader\";\nimport QuestionList from \"./QuestionList\";\nimport faqHeaderContent from \"../data/faq-header-content\";\nimport questionsData from \"../data/questions-data\";\n\nfunction FAQ() {\n  return (\n    <section className=\"faq\">\n      <FAQHeader faqHeaderContent={faqHeaderContent} />\n      <QuestionList questionsData={questionsData} />\n    </section>\n  );\n}\n\nexport default FAQ;\n","import React from \"react\";\nimport Directory from \"../components/Directory\";\nimport MainHeader from \"../components/MainHeader\";\nimport CategoryList from \"../components/CategoryList\";\nimport FAQ from \"../components/FAQ\";\nimport directoryContent from \"../data/directory-content\";\nimport mainHeaderContent from \"../data/main-header-content\";\nimport categoriesData from \"../data/categories-data\";\n\nfunction CustomerSupportPage() {\n  return (\n    <div>\n      <Directory directoryContent={directoryContent} />\n      <MainHeader mainHeaderContent={mainHeaderContent} />\n      <CategoryList categoriesData={categoriesData} />\n      <FAQ />\n    </div>\n  );\n}\n\nexport default CustomerSupportPage;\n","import React from \"react\";\nimport \"./App.css\";\nimport CustomerSupportPage from \"./pages/CustomerSupportPage\";\n\nfunction App() {\n  return (\n    <div>\n      <CustomerSupportPage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}